   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_ccu8.c"
  14              	 .section .text.XMC_CCU8_lUngateClock,"ax",%progbits
  15              	 .align 1
  16              	 .code 16
  17              	 .thumb_func
  19              	XMC_CCU8_lUngateClock:
  20 0000 08B5     	 push {r3,lr}
  21 0002 A023     	 mov r3,#160
  22 0004 DB05     	 lsl r3,r3,#23
  23 0006 9842     	 cmp r0,r3
  24 0008 01D1     	 bne .L2
  25 000a 0220     	 mov r0,#2
  26 000c 04E0     	 b .L4
  27              	.L2:
  28 000e 044B     	 ldr r3,.L6
  29 0010 9842     	 cmp r0,r3
  30 0012 03D1     	 bne .L1
  31 0014 8020     	 mov r0,#128
  32 0016 4002     	 lsl r0,r0,#9
  33              	.L4:
  34 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  35              	.L1:
  36              	 
  37 001c 08BD     	 pop {r3,pc}
  38              	.L7:
  39 001e C046     	 .align 2
  40              	.L6:
  41 0020 00400050 	 .word 1342193664
  43              	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
  44              	 .align 1
  45              	 .global XMC_CCU8_EnableModule
  46              	 .code 16
  47              	 .thumb_func
  49              	XMC_CCU8_EnableModule:
  50 0000 08B5     	 push {r3,lr}
  51 0002 FFF7FEFF 	 bl XMC_CCU8_lUngateClock
  52              	 
  53 0006 08BD     	 pop {r3,pc}
  55              	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
  56              	 .align 1
  57              	 .global XMC_CCU8_DisableModule
  58              	 .code 16
  59              	 .thumb_func
  61              	XMC_CCU8_DisableModule:
  62 0000 08B5     	 push {r3,lr}
  63 0002 A023     	 mov r3,#160
  64 0004 DB05     	 lsl r3,r3,#23
  65 0006 9842     	 cmp r0,r3
  66 0008 01D1     	 bne .L10
  67 000a 0220     	 mov r0,#2
  68 000c 04E0     	 b .L12
  69              	.L10:
  70 000e 044B     	 ldr r3,.L13
  71 0010 9842     	 cmp r0,r3
  72 0012 03D1     	 bne .L9
  73 0014 8020     	 mov r0,#128
  74 0016 4002     	 lsl r0,r0,#9
  75              	.L12:
  76 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
  77              	.L9:
  78              	 
  79 001c 08BD     	 pop {r3,pc}
  80              	.L14:
  81 001e C046     	 .align 2
  82              	.L13:
  83 0020 00400050 	 .word 1342193664
  85              	 .section .text.XMC_CCU8_Init,"ax",%progbits
  86              	 .align 1
  87              	 .global XMC_CCU8_Init
  88              	 .code 16
  89              	 .thumb_func
  91              	XMC_CCU8_Init:
  92 0000 38B5     	 push {r3,r4,r5,lr}
  93 0002 041C     	 mov r4,r0
  94 0004 0D1C     	 mov r5,r1
  95 0006 FFF7FEFF 	 bl XMC_CCU8_lUngateClock
  96 000a 8023     	 mov r3,#128
  97 000c 5B00     	 lsl r3,r3,#1
  98 000e E360     	 str r3,[r4,#12]
  99 0010 2168     	 ldr r1,[r4]
 100 0012 034B     	 ldr r3,.L16
 101              	 
 102 0014 0B40     	 and r3,r1
 103 0016 A903     	 lsl r1,r5,#14
 104 0018 1943     	 orr r1,r3
 105 001a 2160     	 str r1,[r4]
 106 001c 38BD     	 pop {r3,r4,r5,pc}
 107              	.L17:
 108 001e C046     	 .align 2
 109              	.L16:
 110 0020 FF3FFFFF 	 .word -49153
 112              	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 113              	 .align 1
 114              	 .global XMC_CCU8_SetModuleClock
 115              	 .code 16
 116              	 .thumb_func
 118              	XMC_CCU8_SetModuleClock:
 119 0000 3022     	 mov r2,#48
 120 0002 0368     	 ldr r3,[r0]
 121 0004 0901     	 lsl r1,r1,#4
 122 0006 9343     	 bic r3,r2
 123 0008 1943     	 orr r1,r3
 124 000a 0160     	 str r1,[r0]
 125              	 
 126 000c 7047     	 bx lr
 128              	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 129              	 .align 1
 130              	 .global XMC_CCU8_SLICE_CompareInit
 131              	 .code 16
 132              	 .thumb_func
 134              	XMC_CCU8_SLICE_CompareInit:
 135 0000 0123     	 mov r3,#1
 136 0002 0361     	 str r3,[r0,#16]
 137 0004 0B68     	 ldr r3,[r1]
 138              	 
 139 0006 4361     	 str r3,[r0,#20]
 140 0008 4B7B     	 ldrb r3,[r1,#13]
 141 000a DB06     	 lsl r3,r3,#27
 142 000c DB0F     	 lsr r3,r3,#31
 143 000e 1B05     	 lsl r3,r3,#20
 144 0010 4360     	 str r3,[r0,#4]
 145 0012 0B7B     	 ldrb r3,[r1,#12]
 146 0014 1B07     	 lsl r3,r3,#28
 147 0016 1B0F     	 lsr r3,r3,#28
 148 0018 4362     	 str r3,[r0,#36]
 149 001a 0B7B     	 ldrb r3,[r1,#12]
 150 001c 1B09     	 lsr r3,r3,#4
 151 001e C362     	 str r3,[r0,#44]
 152 0020 4B7B     	 ldrb r3,[r1,#13]
 153 0022 1B07     	 lsl r3,r3,#28
 154 0024 1B0F     	 lsr r3,r3,#28
 155 0026 0362     	 str r3,[r0,#32]
 156 0028 4B68     	 ldr r3,[r1,#4]
 157 002a 8361     	 str r3,[r0,#24]
 158 002c 8B68     	 ldr r3,[r1,#8]
 159 002e 8364     	 str r3,[r0,#72]
 160 0030 7047     	 bx lr
 162              	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 163              	 .align 1
 164              	 .global XMC_CCU8_SLICE_CaptureInit
 165              	 .code 16
 166              	 .thumb_func
 168              	XMC_CCU8_SLICE_CaptureInit:
 169 0000 0123     	 mov r3,#1
 170 0002 0361     	 str r3,[r0,#16]
 171 0004 0B68     	 ldr r3,[r1]
 172              	 
 173 0006 4361     	 str r3,[r0,#20]
 174 0008 4B79     	 ldrb r3,[r1,#5]
 175 000a DB07     	 lsl r3,r3,#31
 176 000c DB0F     	 lsr r3,r3,#31
 177 000e DBB2     	 uxtb r3,r3
 178 0010 1B05     	 lsl r3,r3,#20
 179 0012 4360     	 str r3,[r0,#4]
 180 0014 0B79     	 ldrb r3,[r1,#4]
 181 0016 1B09     	 lsr r3,r3,#4
 182 0018 C362     	 str r3,[r0,#44]
 183 001a 0B79     	 ldrb r3,[r1,#4]
 184 001c 1B07     	 lsl r3,r3,#28
 185 001e 1B0F     	 lsr r3,r3,#28
 186 0020 4362     	 str r3,[r0,#36]
 187 0022 7047     	 bx lr
 189              	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 190              	 .align 1
 191              	 .global XMC_CCU8_SLICE_SetOutPath
 192              	 .code 16
 193              	 .thumb_func
 195              	XMC_CCU8_SLICE_SetOutPath:
 196 0000 044B     	 ldr r3,.L22
 197 0002 826C     	 ldr r2,[r0,#72]
 198 0004 0B40     	 and r3,r1
 199 0006 9B08     	 lsr r3,r3,#2
 200 0008 9A43     	 bic r2,r3
 201 000a 034B     	 ldr r3,.L22+4
 202              	 
 203 000c 1940     	 and r1,r3
 204 000e 1143     	 orr r1,r2
 205 0010 8164     	 str r1,[r0,#72]
 206 0012 7047     	 bx lr
 207              	.L23:
 208              	 .align 2
 209              	.L22:
 210 0014 C0CC0C00 	 .word 838848
 211 0018 30330300 	 .word 209712
 213              	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 214              	 .align 1
 215              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 216              	 .code 16
 217              	 .thumb_func
 219              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 220 0000 0368     	 ldr r3,[r0]
 221 0002 0A0C     	 lsr r2,r1,#16
 222 0004 9343     	 bic r3,r2
 223 0006 89B2     	 uxth r1,r1
 224 0008 1943     	 orr r1,r3
 225 000a 0160     	 str r1,[r0]
 226              	 
 227 000c 7047     	 bx lr
 229              	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 230              	 .align 1
 231              	 .global XMC_CCU8_SLICE_StartConfig
 232              	 .code 16
 233              	 .thumb_func
 235              	XMC_CCU8_SLICE_StartConfig:
 236 0000 10B5     	 push {r4,lr}
 237 0002 0324     	 mov r4,#3
 238 0004 4368     	 ldr r3,[r0,#4]
 239 0006 A343     	 bic r3,r4
 240 0008 1943     	 orr r1,r3
 241 000a 4160     	 str r1,[r0,#4]
 242 000c 4369     	 ldr r3,[r0,#20]
 243 000e 012A     	 cmp r2,#1
 244 0010 03D1     	 bne .L26
 245 0012 8022     	 mov r2,#128
 246 0014 D200     	 lsl r2,r2,#3
 247 0016 1343     	 orr r3,r2
 248 0018 01E0     	 b .L27
 249              	.L26:
 250 001a 024A     	 ldr r2,.L28
 251 001c 1340     	 and r3,r2
 252              	.L27:
 253 001e 4361     	 str r3,[r0,#20]
 254              	 
 255 0020 10BD     	 pop {r4,pc}
 256              	.L29:
 257 0022 C046     	 .align 2
 258              	.L28:
 259 0024 FFFBFFFF 	 .word -1025
 261              	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 262              	 .align 1
 263              	 .global XMC_CCU8_SLICE_StopConfig
 264              	 .code 16
 265              	 .thumb_func
 267              	XMC_CCU8_SLICE_StopConfig:
 268 0000 10B5     	 push {r4,lr}
 269 0002 0C24     	 mov r4,#12
 270 0004 4368     	 ldr r3,[r0,#4]
 271 0006 8900     	 lsl r1,r1,#2
 272 0008 A343     	 bic r3,r4
 273 000a 1943     	 orr r1,r3
 274 000c 4160     	 str r1,[r0,#4]
 275 000e 4169     	 ldr r1,[r0,#20]
 276 0010 024B     	 ldr r3,.L31
 277 0012 1202     	 lsl r2,r2,#8
 278 0014 0B40     	 and r3,r1
 279 0016 1A43     	 orr r2,r3
 280 0018 4261     	 str r2,[r0,#20]
 281              	 
 282 001a 10BD     	 pop {r4,pc}
 283              	.L32:
 284              	 .align 2
 285              	.L31:
 286 001c FFFCFFFF 	 .word -769
 288              	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 289              	 .align 1
 290              	 .global XMC_CCU8_SLICE_LoadConfig
 291              	 .code 16
 292              	 .thumb_func
 294              	XMC_CCU8_SLICE_LoadConfig:
 295 0000 4268     	 ldr r2,[r0,#4]
 296 0002 034B     	 ldr r3,.L34
 297 0004 0903     	 lsl r1,r1,#12
 298 0006 1340     	 and r3,r2
 299 0008 1943     	 orr r1,r3
 300 000a 4160     	 str r1,[r0,#4]
 301              	 
 302 000c 7047     	 bx lr
 303              	.L35:
 304 000e C046     	 .align 2
 305              	.L34:
 306 0010 FFCFFFFF 	 .word -12289
 308              	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 309              	 .align 1
 310              	 .global XMC_CCU8_SLICE_LoadSelector
 311              	 .code 16
 312              	 .thumb_func
 314              	XMC_CCU8_SLICE_LoadSelector:
 315 0000 8022     	 mov r2,#128
 316 0002 4369     	 ldr r3,[r0,#20]
 317 0004 C901     	 lsl r1,r1,#7
 318 0006 9343     	 bic r3,r2
 319 0008 1943     	 orr r1,r3
 320 000a 4161     	 str r1,[r0,#20]
 321              	 
 322 000c 7047     	 bx lr
 324              	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 325              	 .align 1
 326              	 .global XMC_CCU8_SLICE_ModulationConfig
 327              	 .code 16
 328              	 .thumb_func
 330              	XMC_CCU8_SLICE_ModulationConfig:
 331 0000 70B5     	 push {r4,r5,r6,lr}
 332 0002 04AC     	 add r4,sp,#16
 333 0004 4668     	 ldr r6,[r0,#4]
 334 0006 2578     	 ldrb r5,[r4]
 335 0008 0D4C     	 ldr r4,.L42
 336 000a 8904     	 lsl r1,r1,#18
 337 000c 3440     	 and r4,r6
 338 000e 2143     	 orr r1,r4
 339 0010 4160     	 str r1,[r0,#4]
 340 0012 4169     	 ldr r1,[r0,#20]
 341 0014 012A     	 cmp r2,#1
 342 0016 03D1     	 bne .L38
 343 0018 8022     	 mov r2,#128
 344 001a 5204     	 lsl r2,r2,#17
 345 001c 0A43     	 orr r2,r1
 346 001e 01E0     	 b .L39
 347              	.L38:
 348 0020 084A     	 ldr r2,.L42+4
 349 0022 0A40     	 and r2,r1
 350              	.L39:
 351 0024 002D     	 cmp r5,#0
 352 0026 03D0     	 beq .L40
 353 0028 8021     	 mov r1,#128
 354 002a 0904     	 lsl r1,r1,#16
 355 002c 0A43     	 orr r2,r1
 356 002e 01E0     	 b .L41
 357              	.L40:
 358 0030 0549     	 ldr r1,.L42+8
 359 0032 0A40     	 and r2,r1
 360              	.L41:
 361 0034 0549     	 ldr r1,.L42+12
 362 0036 DB06     	 lsl r3,r3,#27
 363 0038 0A40     	 and r2,r1
 364 003a 1A43     	 orr r2,r3
 365 003c 4261     	 str r2,[r0,#20]
 366              	 
 367 003e 70BD     	 pop {r4,r5,r6,pc}
 368              	.L43:
 369              	 .align 2
 370              	.L42:
 371 0040 FFFFF3FF 	 .word -786433
 372 0044 FFFFFFFE 	 .word -16777217
 373 0048 FFFF7FFF 	 .word -8388609
 374 004c FFFFFFE7 	 .word -402653185
 376              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 377              	 .align 1
 378              	 .global XMC_CCU8_SLICE_CountConfig
 379              	 .code 16
 380              	 .thumb_func
 382              	XMC_CCU8_SLICE_CountConfig:
 383 0000 4268     	 ldr r2,[r0,#4]
 384 0002 034B     	 ldr r3,.L45
 385 0004 8903     	 lsl r1,r1,#14
 386 0006 1340     	 and r3,r2
 387 0008 1943     	 orr r1,r3
 388 000a 4160     	 str r1,[r0,#4]
 389              	 
 390 000c 7047     	 bx lr
 391              	.L46:
 392 000e C046     	 .align 2
 393              	.L45:
 394 0010 FF3FFFFF 	 .word -49153
 396              	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 397              	 .align 1
 398              	 .global XMC_CCU8_SLICE_GateConfig
 399              	 .code 16
 400              	 .thumb_func
 402              	XMC_CCU8_SLICE_GateConfig:
 403 0000 4268     	 ldr r2,[r0,#4]
 404 0002 034B     	 ldr r3,.L48
 405 0004 0902     	 lsl r1,r1,#8
 406 0006 1340     	 and r3,r2
 407 0008 1943     	 orr r1,r3
 408 000a 4160     	 str r1,[r0,#4]
 409              	 
 410 000c 7047     	 bx lr
 411              	.L49:
 412 000e C046     	 .align 2
 413              	.L48:
 414 0010 FFFCFFFF 	 .word -769
 416              	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 417              	 .align 1
 418              	 .global XMC_CCU8_SLICE_Capture0Config
 419              	 .code 16
 420              	 .thumb_func
 422              	XMC_CCU8_SLICE_Capture0Config:
 423 0000 3022     	 mov r2,#48
 424 0002 4368     	 ldr r3,[r0,#4]
 425 0004 0901     	 lsl r1,r1,#4
 426 0006 9343     	 bic r3,r2
 427 0008 1943     	 orr r1,r3
 428 000a 4160     	 str r1,[r0,#4]
 429              	 
 430 000c 7047     	 bx lr
 432              	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 433              	 .align 1
 434              	 .global XMC_CCU8_SLICE_Capture1Config
 435              	 .code 16
 436              	 .thumb_func
 438              	XMC_CCU8_SLICE_Capture1Config:
 439 0000 C022     	 mov r2,#192
 440 0002 4368     	 ldr r3,[r0,#4]
 441 0004 8901     	 lsl r1,r1,#6
 442 0006 9343     	 bic r3,r2
 443 0008 1943     	 orr r1,r3
 444 000a 4160     	 str r1,[r0,#4]
 445              	 
 446 000c 7047     	 bx lr
 448              	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 449              	 .align 1
 450              	 .global XMC_CCU8_SLICE_DirectionConfig
 451              	 .code 16
 452              	 .thumb_func
 454              	XMC_CCU8_SLICE_DirectionConfig:
 455 0000 4268     	 ldr r2,[r0,#4]
 456 0002 034B     	 ldr r3,.L53
 457 0004 8902     	 lsl r1,r1,#10
 458 0006 1340     	 and r3,r2
 459 0008 1943     	 orr r1,r3
 460 000a 4160     	 str r1,[r0,#4]
 461              	 
 462 000c 7047     	 bx lr
 463              	.L54:
 464 000e C046     	 .align 2
 465              	.L53:
 466 0010 FFF3FFFF 	 .word -3073
 468              	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 469              	 .align 1
 470              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 471              	 .code 16
 472              	 .thumb_func
 474              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 475 0000 8023     	 mov r3,#128
 476 0002 4268     	 ldr r2,[r0,#4]
 477 0004 5B02     	 lsl r3,r3,#9
 478 0006 1343     	 orr r3,r2
 479 0008 4360     	 str r3,[r0,#4]
 480              	 
 481 000a 7047     	 bx lr
 483              	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 484              	 .align 1
 485              	 .global XMC_CCU8_SLICE_TrapConfig
 486              	 .code 16
 487              	 .thumb_func
 489              	XMC_CCU8_SLICE_TrapConfig:
 490 0000 8023     	 mov r3,#128
 491 0002 10B5     	 push {r4,lr}
 492 0004 4468     	 ldr r4,[r0,#4]
 493 0006 9B02     	 lsl r3,r3,#10
 494 0008 2343     	 orr r3,r4
 495 000a 4360     	 str r3,[r0,#4]
 496 000c 4369     	 ldr r3,[r0,#20]
 497 000e 002A     	 cmp r2,#0
 498 0010 03D0     	 beq .L57
 499 0012 8022     	 mov r2,#128
 500 0014 9203     	 lsl r2,r2,#14
 501 0016 1343     	 orr r3,r2
 502 0018 01E0     	 b .L58
 503              	.L57:
 504 001a 064A     	 ldr r2,.L61
 505 001c 1340     	 and r3,r2
 506              	.L58:
 507 001e 0129     	 cmp r1,#1
 508 0020 03D1     	 bne .L59
 509 0022 8022     	 mov r2,#128
 510 0024 D203     	 lsl r2,r2,#15
 511 0026 1343     	 orr r3,r2
 512 0028 01E0     	 b .L60
 513              	.L59:
 514 002a 034A     	 ldr r2,.L61+4
 515 002c 1340     	 and r3,r2
 516              	.L60:
 517 002e 4361     	 str r3,[r0,#20]
 518              	 
 519 0030 10BD     	 pop {r4,pc}
 520              	.L62:
 521 0032 C046     	 .align 2
 522              	.L61:
 523 0034 FFFFDFFF 	 .word -2097153
 524 0038 FFFFBFFF 	 .word -4194305
 526              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 527              	 .align 1
 528              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 529              	 .code 16
 530              	 .thumb_func
 532              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 533 0000 10B5     	 push {r4,lr}
 534 0002 3024     	 mov r4,#48
 535 0004 0368     	 ldr r3,[r0]
 536              	 
 537 0006 A343     	 bic r3,r4
 538 0008 1C1C     	 mov r4,r3
 539 000a 4B78     	 ldrb r3,[r1,#1]
 540 000c 1B01     	 lsl r3,r3,#4
 541 000e 2343     	 orr r3,r4
 542 0010 134C     	 ldr r4,.L64
 543 0012 2340     	 and r3,r4
 544 0014 5478     	 ldrb r4,[r2,#1]
 545 0016 2402     	 lsl r4,r4,#8
 546 0018 2343     	 orr r3,r4
 547 001a 4024     	 mov r4,#64
 548 001c A343     	 bic r3,r4
 549 001e 8C78     	 ldrb r4,[r1,#2]
 550 0020 A401     	 lsl r4,r4,#6
 551 0022 2343     	 orr r3,r4
 552 0024 0F4C     	 ldr r4,.L64+4
 553 0026 2340     	 and r3,r4
 554 0028 9478     	 ldrb r4,[r2,#2]
 555 002a A402     	 lsl r4,r4,#10
 556 002c 2343     	 orr r3,r4
 557 002e 0E4C     	 ldr r4,.L64+8
 558 0030 2340     	 and r3,r4
 559 0032 CC78     	 ldrb r4,[r1,#3]
 560 0034 2405     	 lsl r4,r4,#20
 561 0036 2343     	 orr r3,r4
 562 0038 0C4C     	 ldr r4,.L64+12
 563 003a 2340     	 and r3,r4
 564 003c D478     	 ldrb r4,[r2,#3]
 565 003e 2406     	 lsl r4,r4,#24
 566 0040 2343     	 orr r3,r4
 567 0042 0360     	 str r3,[r0]
 568 0044 D830     	 add r0,r0,#216
 569 0046 0468     	 ldr r4,[r0]
 570 0048 094B     	 ldr r3,.L64+16
 571 004a 1278     	 ldrb r2,[r2]
 572 004c 1C40     	 and r4,r3
 573 004e 0B78     	 ldrb r3,[r1]
 574 0050 0849     	 ldr r1,.L64+20
 575 0052 1B02     	 lsl r3,r3,#8
 576 0054 2343     	 orr r3,r4
 577 0056 0B40     	 and r3,r1
 578 0058 1204     	 lsl r2,r2,#16
 579 005a 1343     	 orr r3,r2
 580 005c 0360     	 str r3,[r0]
 581 005e 10BD     	 pop {r4,pc}
 582              	.L65:
 583              	 .align 2
 584              	.L64:
 585 0060 FFFCFFFF 	 .word -769
 586 0064 FFFBFFFF 	 .word -1025
 587 0068 FFFFCFFF 	 .word -3145729
 588 006c FFFFFFFC 	 .word -50331649
 589 0070 FFC0FFFF 	 .word -16129
 590 0074 FFFFC0FF 	 .word -4128769
 592              	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 593              	 .align 1
 594              	 .global XMC_CCU8_SLICE_ConfigureEvent
 595              	 .code 16
 596              	 .thumb_func
 598              	XMC_CCU8_SLICE_ConfigureEvent:
 599 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 600 0002 0326     	 mov r6,#3
 601 0004 351C     	 mov r5,r6
 602 0006 0139     	 sub r1,r1,#1
 603 0008 C9B2     	 uxtb r1,r1
 604 000a 8B00     	 lsl r3,r1,#2
 605 000c DBB2     	 uxtb r3,r3
 606 000e 9D40     	 lsl r5,r5,r3
 607 0010 0468     	 ldr r4,[r0]
 608 0012 0127     	 mov r7,#1
 609 0014 AC43     	 bic r4,r5
 610 0016 5578     	 ldrb r5,[r2,#1]
 611 0018 C900     	 lsl r1,r1,#3
 612 001a 9D40     	 lsl r5,r5,r3
 613 001c 2C43     	 orr r4,r5
 614 001e 9D1C     	 add r5,r3,#2
 615 0020 EDB2     	 uxtb r5,r5
 616 0022 AF40     	 lsl r7,r7,r5
 617 0024 BC43     	 bic r4,r7
 618 0026 9778     	 ldrb r7,[r2,#2]
 619 0028 1033     	 add r3,r3,#16
 620 002a AF40     	 lsl r7,r7,r5
 621 002c D578     	 ldrb r5,[r2,#3]
 622 002e DBB2     	 uxtb r3,r3
 623 0030 9E40     	 lsl r6,r6,r3
 624 0032 9D40     	 lsl r5,r5,r3
 625 0034 3F23     	 mov r3,#63
 626 0036 C9B2     	 uxtb r1,r1
 627 0038 8B40     	 lsl r3,r3,r1
 628 003a 3C43     	 orr r4,r7
 629 003c B443     	 bic r4,r6
 630 003e 2C43     	 orr r4,r5
 631 0040 0460     	 str r4,[r0]
 632 0042 D830     	 add r0,r0,#216
 633 0044 0468     	 ldr r4,[r0]
 634              	 
 635 0046 9C43     	 bic r4,r3
 636 0048 1378     	 ldrb r3,[r2]
 637 004a 8B40     	 lsl r3,r3,r1
 638 004c 191C     	 mov r1,r3
 639 004e 2143     	 orr r1,r4
 640 0050 0160     	 str r1,[r0]
 641 0052 F0BD     	 pop {r4,r5,r6,r7,pc}
 643              	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 644              	 .align 1
 645              	 .global XMC_CCU8_SLICE_SetInput
 646              	 .code 16
 647              	 .thumb_func
 649              	XMC_CCU8_SLICE_SetInput:
 650 0000 10B5     	 push {r4,lr}
 651 0002 3F24     	 mov r4,#63
 652 0004 0139     	 sub r1,r1,#1
 653 0006 C900     	 lsl r1,r1,#3
 654 0008 C9B2     	 uxtb r1,r1
 655 000a 8C40     	 lsl r4,r4,r1
 656 000c 8A40     	 lsl r2,r2,r1
 657 000e D830     	 add r0,r0,#216
 658 0010 0368     	 ldr r3,[r0]
 659              	 
 660 0012 A343     	 bic r3,r4
 661 0014 1343     	 orr r3,r2
 662 0016 0360     	 str r3,[r0]
 663 0018 10BD     	 pop {r4,pc}
 665              	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 666              	 .align 1
 667              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 668              	 .code 16
 669              	 .thumb_func
 671              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 672 0000 10B5     	 push {r4,lr}
 673 0002 0224     	 mov r4,#2
 674 0004 231C     	 mov r3,r4
 675 0006 4269     	 ldr r2,[r0,#20]
 676 0008 1343     	 orr r3,r2
 677 000a 0029     	 cmp r1,#0
 678 000c 01D1     	 bne .L70
 679 000e 131C     	 mov r3,r2
 680 0010 A343     	 bic r3,r4
 681              	.L70:
 682 0012 4361     	 str r3,[r0,#20]
 683              	 
 684 0014 10BD     	 pop {r4,pc}
 686              	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 687              	 .align 1
 688              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 689              	 .code 16
 690              	 .thumb_func
 692              	XMC_CCU8_SLICE_SetTimerCountingMode:
 693 0000 10B5     	 push {r4,lr}
 694 0002 0124     	 mov r4,#1
 695 0004 231C     	 mov r3,r4
 696 0006 4269     	 ldr r2,[r0,#20]
 697 0008 1343     	 orr r3,r2
 698 000a 0029     	 cmp r1,#0
 699 000c 01D1     	 bne .L73
 700 000e 131C     	 mov r3,r2
 701 0010 A343     	 bic r3,r4
 702              	.L73:
 703 0012 4361     	 str r3,[r0,#20]
 704              	 
 705 0014 10BD     	 pop {r4,pc}
 707              	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 708              	 .align 1
 709              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 710              	 .code 16
 711              	 .thumb_func
 713              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 714 0000 4163     	 str r1,[r0,#52]
 715              	 
 716 0002 7047     	 bx lr
 718              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 719              	 .align 1
 720              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 721              	 .code 16
 722              	 .thumb_func
 724              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 725 0000 1C31     	 add r1,r1,#28
 726 0002 8900     	 lsl r1,r1,#2
 727 0004 4018     	 add r0,r0,r1
 728 0006 4068     	 ldr r0,[r0,#4]
 729              	 
 730 0008 7047     	 bx lr
 732              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 733              	 .align 1
 734              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 735              	 .code 16
 736              	 .thumb_func
 738              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 739 0000 1023     	 mov r3,#16
 740 0002 30B5     	 push {r4,r5,lr}
 741 0004 4469     	 ldr r4,[r0,#20]
 742 0006 2340     	 and r3,r4
 743 0008 05D1     	 bne .L82
 744 000a 0224     	 mov r4,#2
 745 000c 0129     	 cmp r1,#1
 746 000e 07D1     	 bne .L78
 747 0010 0424     	 mov r4,#4
 748 0012 0223     	 mov r3,#2
 749 0014 04E0     	 b .L78
 750              	.L82:
 751 0016 0424     	 mov r4,#4
 752 0018 0023     	 mov r3,#0
 753 001a 01E0     	 b .L78
 754              	.L79:
 755 001c 0133     	 add r3,r3,#1
 756 001e DBB2     	 uxtb r3,r3
 757              	.L78:
 758 0020 A342     	 cmp r3,r4
 759 0022 0AD0     	 beq .L84
 760 0024 191C     	 mov r1,r3
 761 0026 1C31     	 add r1,r1,#28
 762 0028 8900     	 lsl r1,r1,#2
 763 002a 4118     	 add r1,r0,r1
 764 002c 4D68     	 ldr r5,[r1,#4]
 765 002e ED02     	 lsl r5,r5,#11
 766 0030 F4D5     	 bpl .L79
 767 0032 4B68     	 ldr r3,[r1,#4]
 768 0034 0020     	 mov r0,#0
 769 0036 1360     	 str r3,[r2]
 770 0038 00E0     	 b .L80
 771              	.L84:
 772 003a 0120     	 mov r0,#1
 773              	.L80:
 774              	 
 775 003c 30BD     	 pop {r4,r5,pc}
 777              	 .section .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 778              	 .align 1
 779              	 .global XMC_CCU8_SLICE_GetCapturedValueFromFifo
 780              	 .code 16
 781              	 .thumb_func
 783              	XMC_CCU8_SLICE_GetCapturedValueFromFifo:
 784 0000 0029     	 cmp r1,#0
 785 0002 01D1     	 bne .L86
 786 0004 B830     	 add r0,r0,#184
 787 0006 00E0     	 b .L88
 788              	.L86:
 789 0008 BC30     	 add r0,r0,#188
 790              	.L88:
 791 000a 0068     	 ldr r0,[r0]
 792              	 
 793 000c 7047     	 bx lr
 795              	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 796              	 .align 1
 797              	 .global XMC_CCU8_SLICE_EnableDithering
 798              	 .code 16
 799              	 .thumb_func
 801              	XMC_CCU8_SLICE_EnableDithering:
 802 0000 30B5     	 push {r4,r5,lr}
 803 0002 4569     	 ldr r5,[r0,#20]
 804 0004 074C     	 ldr r4,.L98
 805 0006 2C40     	 and r4,r5
 806 0008 0029     	 cmp r1,#0
 807 000a 02D0     	 beq .L90
 808 000c 8021     	 mov r1,#128
 809 000e 8901     	 lsl r1,r1,#6
 810 0010 0C43     	 orr r4,r1
 811              	.L90:
 812 0012 002A     	 cmp r2,#0
 813 0014 02D0     	 beq .L91
 814 0016 8022     	 mov r2,#128
 815 0018 D201     	 lsl r2,r2,#7
 816 001a 1443     	 orr r4,r2
 817              	.L91:
 818 001c 4461     	 str r4,[r0,#20]
 819              	 
 820 001e 0362     	 str r3,[r0,#32]
 821 0020 30BD     	 pop {r4,r5,pc}
 822              	.L99:
 823 0022 C046     	 .align 2
 824              	.L98:
 825 0024 FF9FFFFF 	 .word -24577
 827              	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 828              	 .align 1
 829              	 .global XMC_CCU8_SLICE_SetPrescaler
 830              	 .code 16
 831              	 .thumb_func
 833              	XMC_CCU8_SLICE_SetPrescaler:
 834 0000 826A     	 ldr r2,[r0,#40]
 835 0002 034B     	 ldr r3,.L101
 836              	 
 837 0004 1340     	 and r3,r2
 838 0006 0A02     	 lsl r2,r1,#8
 839 0008 1343     	 orr r3,r2
 840 000a 8362     	 str r3,[r0,#40]
 841 000c 4162     	 str r1,[r0,#36]
 842 000e 7047     	 bx lr
 843              	.L102:
 844              	 .align 2
 845              	.L101:
 846 0010 FFF0FFFF 	 .word -3841
 848              	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 849              	 .align 1
 850              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 851              	 .code 16
 852              	 .thumb_func
 854              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 855 0000 0029     	 cmp r1,#0
 856 0002 01D1     	 bne .L104
 857 0004 C263     	 str r2,[r0,#60]
 858 0006 00E0     	 b .L103
 859              	.L104:
 860 0008 4264     	 str r2,[r0,#68]
 861              	.L103:
 862              	 
 863 000a 7047     	 bx lr
 865              	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 866              	 .align 1
 867              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 868              	 .code 16
 869              	 .thumb_func
 871              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 872 0000 0029     	 cmp r1,#0
 873 0002 01D1     	 bne .L107
 874 0004 806B     	 ldr r0,[r0,#56]
 875 0006 00E0     	 b .L109
 876              	.L107:
 877 0008 006C     	 ldr r0,[r0,#64]
 878              	.L109:
 879 000a 80B2     	 uxth r0,r0
 880              	 
 881 000c 7047     	 bx lr
 883              	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 884              	 .align 1
 885              	 .global XMC_CCU8_SLICE_SetInterruptNode
 886              	 .code 16
 887              	 .thumb_func
 889              	XMC_CCU8_SLICE_SetInterruptNode:
 890 0000 10B5     	 push {r4,lr}
 891 0002 0B29     	 cmp r1,#11
 892 0004 0CD8     	 bhi .L110
 893 0006 074B     	 ldr r3,.L115
 894 0008 4C00     	 lsl r4,r1,#1
 895 000a E45A     	 ldrh r4,[r4,r3]
 896 000c 064B     	 ldr r3,.L115+4
 897 000e 5956     	 ldrsb r1,[r3,r1]
 898 0010 002C     	 cmp r4,#0
 899 0012 05D0     	 beq .L110
 900 0014 8A40     	 lsl r2,r2,r1
 901 0016 A830     	 add r0,r0,#168
 902 0018 0368     	 ldr r3,[r0]
 903 001a A343     	 bic r3,r4
 904 001c 1A43     	 orr r2,r3
 905 001e 0260     	 str r2,[r0]
 906              	.L110:
 907              	 
 908 0020 10BD     	 pop {r4,pc}
 909              	.L116:
 910 0022 C046     	 .align 2
 911              	.L115:
 912 0024 00000000 	 .word .LANCHOR0
 913 0028 00000000 	 .word .LANCHOR1
 915              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 916              	 .align 1
 917              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 918              	 .code 16
 919              	 .thumb_func
 921              	XMC_CCU8_SLICE_SetPassiveLevel:
 922 0000 8369     	 ldr r3,[r0,#24]
 923              	 
 924 0002 8B43     	 bic r3,r1
 925 0004 4908     	 lsr r1,r1,#1
 926 0006 8A40     	 lsl r2,r2,r1
 927 0008 1A43     	 orr r2,r3
 928 000a 8261     	 str r2,[r0,#24]
 929 000c 7047     	 bx lr
 931              	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 932              	 .align 1
 933              	 .global XMC_CCU8_SLICE_DeadTimeInit
 934              	 .code 16
 935              	 .thumb_func
 937              	XMC_CCU8_SLICE_DeadTimeInit:
 938 0000 4B68     	 ldr r3,[r1,#4]
 939              	 
 940 0002 0365     	 str r3,[r0,#80]
 941 0004 8B68     	 ldr r3,[r1,#8]
 942 0006 4365     	 str r3,[r0,#84]
 943 0008 0B68     	 ldr r3,[r1]
 944 000a C364     	 str r3,[r0,#76]
 945 000c 7047     	 bx lr
 947              	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 948              	 .align 1
 949              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 950              	 .code 16
 951              	 .thumb_func
 953              	XMC_CCU8_SLICE_ConfigureDeadTime:
 954 0000 3F22     	 mov r2,#63
 955 0002 C36C     	 ldr r3,[r0,#76]
 956              	 
 957 0004 9343     	 bic r3,r2
 958 0006 C364     	 str r3,[r0,#76]
 959 0008 C36C     	 ldr r3,[r0,#76]
 960 000a 1943     	 orr r1,r3
 961 000c C164     	 str r1,[r0,#76]
 962 000e 7047     	 bx lr
 964              	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 965              	 .align 1
 966              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 967              	 .code 16
 968              	 .thumb_func
 970              	XMC_CCU8_SLICE_SetDeadTimeValue:
 971 0000 1B02     	 lsl r3,r3,#8
 972 0002 1A43     	 orr r2,r3
 973 0004 0029     	 cmp r1,#0
 974 0006 01D1     	 bne .L121
 975 0008 0265     	 str r2,[r0,#80]
 976 000a 00E0     	 b .L120
 977              	.L121:
 978 000c 4265     	 str r2,[r0,#84]
 979              	.L120:
 980              	 
 981 000e 7047     	 bx lr
 983              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 984              	 .align 1
 985              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 986              	 .code 16
 987              	 .thumb_func
 989              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 990 0000 C022     	 mov r2,#192
 991 0002 C36C     	 ldr r3,[r0,#76]
 992 0004 8901     	 lsl r1,r1,#6
 993 0006 9343     	 bic r3,r2
 994 0008 C364     	 str r3,[r0,#76]
 995 000a C36C     	 ldr r3,[r0,#76]
 996              	 
 997 000c 1943     	 orr r1,r3
 998 000e C164     	 str r1,[r0,#76]
 999 0010 7047     	 bx lr
 1001              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 1002              	 .align 1
 1003              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 1004              	 .code 16
 1005              	 .thumb_func
 1007              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 1008 0000 4269     	 ldr r2,[r0,#20]
 1009 0002 044B     	 ldr r3,.L125
 1010 0004 4907     	 lsl r1,r1,#29
 1011 0006 1340     	 and r3,r2
 1012 0008 4361     	 str r3,[r0,#20]
 1013 000a 4369     	 ldr r3,[r0,#20]
 1014              	 
 1015 000c 1943     	 orr r1,r3
 1016 000e 4161     	 str r1,[r0,#20]
 1017 0010 7047     	 bx lr
 1018              	.L126:
 1019 0012 C046     	 .align 2
 1020              	.L125:
 1021 0014 FFFFFF9F 	 .word -1610612737
 1023              	 .section .rodata.CSWTCH.41,"a",%progbits
 1024              	 .set .LANCHOR1,.+0
 1027              	CSWTCH.41:
 1028 0000 00       	 .byte 0
 1029 0001 00       	 .byte 0
 1030 0002 02       	 .byte 2
 1031 0003 02       	 .byte 2
 1032 0004 04       	 .byte 4
 1033 0005 04       	 .byte 4
 1034 0006 00       	 .byte 0
 1035 0007 00       	 .byte 0
 1036 0008 08       	 .byte 8
 1037 0009 0A       	 .byte 10
 1038 000a 0C       	 .byte 12
 1039 000b 0C       	 .byte 12
 1040              	 .section .rodata.CSWTCH.40,"a",%progbits
 1041              	 .align 1
 1042              	 .set .LANCHOR0,.+0
 1045              	CSWTCH.40:
 1046 0000 0300     	 .short 3
 1047 0002 0300     	 .short 3
 1048 0004 0C00     	 .short 12
 1049 0006 0C00     	 .short 12
 1050 0008 3000     	 .short 48
 1051 000a 3000     	 .short 48
 1052 000c 0000     	 .short 0
 1053 000e 0000     	 .short 0
 1054 0010 0003     	 .short 768
 1055 0012 000C     	 .short 3072
 1056 0014 0030     	 .short 12288
 1057 0016 0030     	 .short 12288
 1058              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:15     .text.XMC_CCU8_lUngateClock:00000000 $t
    {standard input}:19     .text.XMC_CCU8_lUngateClock:00000000 XMC_CCU8_lUngateClock
    {standard input}:41     .text.XMC_CCU8_lUngateClock:00000020 $d
    {standard input}:44     .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:49     .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:56     .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:61     .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:83     .text.XMC_CCU8_DisableModule:00000020 $d
    {standard input}:86     .text.XMC_CCU8_Init:00000000 $t
    {standard input}:91     .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:110    .text.XMC_CCU8_Init:00000020 $d
    {standard input}:113    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:118    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:129    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:134    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:163    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:168    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:190    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:195    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:210    .text.XMC_CCU8_SLICE_SetOutPath:00000014 $d
    {standard input}:214    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:219    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:230    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:235    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:259    .text.XMC_CCU8_SLICE_StartConfig:00000024 $d
    {standard input}:262    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:267    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:286    .text.XMC_CCU8_SLICE_StopConfig:0000001c $d
    {standard input}:289    .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:294    .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:306    .text.XMC_CCU8_SLICE_LoadConfig:00000010 $d
    {standard input}:309    .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:314    .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:325    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:330    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:371    .text.XMC_CCU8_SLICE_ModulationConfig:00000040 $d
    {standard input}:377    .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:382    .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:394    .text.XMC_CCU8_SLICE_CountConfig:00000010 $d
    {standard input}:397    .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:402    .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:414    .text.XMC_CCU8_SLICE_GateConfig:00000010 $d
    {standard input}:417    .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:422    .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:433    .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:438    .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:449    .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:454    .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:466    .text.XMC_CCU8_SLICE_DirectionConfig:00000010 $d
    {standard input}:469    .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:474    .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:484    .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:489    .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:523    .text.XMC_CCU8_SLICE_TrapConfig:00000034 $d
    {standard input}:527    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:532    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:585    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000060 $d
    {standard input}:593    .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:598    .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:644    .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:649    .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:666    .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:671    .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:687    .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:692    .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:708    .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:713    .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:719    .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:724    .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:733    .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:738    .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:778    .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:783    .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU8_SLICE_GetCapturedValueFromFifo
    {standard input}:796    .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:801    .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:825    .text.XMC_CCU8_SLICE_EnableDithering:00000024 $d
    {standard input}:828    .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:833    .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:846    .text.XMC_CCU8_SLICE_SetPrescaler:00000010 $d
    {standard input}:849    .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:854    .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:866    .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:871    .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:884    .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:889    .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:912    .text.XMC_CCU8_SLICE_SetInterruptNode:00000024 $d
    {standard input}:916    .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:921    .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:932    .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:937    .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:948    .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:953    .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:965    .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:970    .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:984    .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:989    .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:1002   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:1007   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
    {standard input}:1021   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000014 $d
    {standard input}:1027   .rodata.CSWTCH.41:00000000 CSWTCH.41
    {standard input}:1041   .rodata.CSWTCH.40:00000000 $d
    {standard input}:1045   .rodata.CSWTCH.40:00000000 CSWTCH.40

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GatePeripheralClock
